/*
Copyright (C) 2008, The Perl Foundation.

=head1 NAME

src/pmc/php.pmc - Php native runtime

=head1 DESCRIPTION

This singleton PMC holds some static methods.

=head2 Methods

=over 4

=cut

*/

#include "pipp_private.h"
#include "parrot/pmc.h"
#include "parrot/gc_api.h"
#include "parrot/compiler.h"

INTVAL dynpmc_PhpArray;
INTVAL dynpmc_PhpBoolean;
INTVAL dynpmc_PhpFloat;
INTVAL dynpmc_PhpInteger;
INTVAL dynpmc_PhpString;
INTVAL dynpmc_PhpNull;

static PMC * Php_PMC;


pmclass Php
    singleton
    dynpmc
    group pipp_group {

/*
* Class initialization.
*/
    void class_init() {
        Php_PMC = NULL;
        dynpmc_PhpArray = Parrot_pmc_get_type_str(interp, string_from_literal(interp, "PhpArray"));
        dynpmc_PhpBoolean = Parrot_pmc_get_type_str(interp, string_from_literal(interp, "PhpBoolean"));
        dynpmc_PhpFloat = Parrot_pmc_get_type_str(interp, string_from_literal(interp, "PhpFloat"));
        dynpmc_PhpInteger = Parrot_pmc_get_type_str(interp, string_from_literal(interp, "PhpInteger"));
        dynpmc_PhpString = Parrot_pmc_get_type_str(interp, string_from_literal(interp, "PhpString"));
        dynpmc_PhpNull = Parrot_pmc_get_type_str(interp, string_from_literal(interp, "PhpNull"));
    }

/*

=item C<void* get_pointer()>

=item C<void set_pointer(void *ptr)>

These two functions are part of the singleton creation interface. For more
information see F<src/pmc.c>.

=cut

*/
    VTABLE void* get_pointer() {
        return Php_PMC;
    }

    VTABLE void set_pointer(void *ptr) {
        Php_PMC = (PMC *)ptr;
    }

}

/*

=back

=head1 AUTHORS

Francois Perrad

=cut

*/

/*
 * Local variables:
 *   c-file-style: "parrot"
 * End:
 * vim: expandtab shiftwidth=4:
 */
